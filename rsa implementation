#include<stdio.h>
#include<conio.h>
#include<math.h>
#include<string.h>
int checkprime(long int);
int findgcd(long int,long int);
 long int encrypt(long int,long int,long int);
 long int decrypt(long int,long int,long int);
int main()
{
   long int p,q,modulus,n,e,d,gcd,i;
   int flag1,flag2;
   long int num[20],encryptednumber[20],decryptednumber[20];
   do
   {
   printf("\nEnter first Prime Number p : ");
   scanf("%d",&p);
   flag1=checkprime(p);
   if(flag1==0)
   	printf("\n p is not prime number");
  }
   while(flag1==0);
   
   do
   {
   	printf("\nEnter second Prime Number q : ");
   	scanf("%d",&q);
   	flag2=checkprime(q);
   	if(flag2==0)
   		printf("\n q is not prime number");
  }
   while(flag2==0);
   
   n=p*q;
   modulus=(p-1)*(q-1);
   printf("\nValue of n is : %d",n);
   printf("\n value of modulus is :%d",modulus);
   e=2;
   do{
   		
   		gcd=findgcd(e,modulus);
		if(gcd==1)
		  break;
		else
   		 {
			//printf("\nwrong value of e ,trying again");
			e++;
	     }
	    
   	}while(e<modulus);
   	printf("\n value of e (1<e<modulus) is %d : ",e);
   printf("\n public key is therfore %d %d ",e,n);
   d=0;
   do{
   		if((d*e)%modulus==1)
   			break;
		else
	   		d++;
	 }while(d<n);
   printf("\n value of d is : %d",d);	 
   printf("\n private key is  %d %d ",d,n);
   int s;
   for(s=1;s<=10;s++)
   { 
    printf("\n enter the number to be encrypted : ");
    scanf("%d",&num[s]);
   //printf("\n the number entered is %d ",*(num +s));
   encryptednumber[s]=encrypt(num[s],e,n);
   printf("\nthe encrypted number is  %ld",encryptednumber[s]);
   decryptednumber[s]=decrypt(encryptednumber[s],d,n);
   fflush(stdout);
   printf("\nthe decrypted number is  %ld",decryptednumber[s]);
   }
   return 1;
}
int checkprime(long int n)
{ int k;
  for (k=2;k<=n/2;k++)
     { if(n%k==0)
       return 0;
     }
   return 1;
}
int findgcd(long int m,long int n)
{ int r;
do
{ r=m%n;
  if (r==0)
    break;
  else
  {m=n;
   n=r;
  }
}while(1);
  return n;
}
 long int encrypt( long int num1,long int e, long int n)
{   
      long int temp=1;
    int t; 
	 for (t=1;t<=e;t++)
     	{temp=num1*temp;
      	 temp=temp%n;
      	}
    return temp;
}
 long int decrypt(long int encnum,long int d, long int n)
{ 
    long int tempo=1;
    int t;
    for (t=1;t<=d;t++)
     {tempo=encnum*tempo;
      tempo=tempo%n;
	 }
	 fflush(stdout);
	 
    
   return tempo;
}
